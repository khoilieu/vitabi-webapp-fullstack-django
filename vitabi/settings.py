"""
Django settings for vitabi project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import django_heroku
import dj_database_url
import os
from dotenv import load_dotenv


load_dotenv()

GOOGLE_MAPS_API_KEY = os.getenv('GOOGLE_MAPS_API_KEY')
GOOGLE_CUSTOM_SEARCH_API_KEY = os.getenv('GOOGLE_CUSTOM_SEARCH_API_KEY')
GOOGLE_CUSTOM_SEARCH_CX = os.getenv('GOOGLE_CUSTOM_SEARCH_CX')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

LOGIN_URL = 'login'
LANGUAGE_COOKIE_NAME = 'django_language'

SESSION_COOKIE_AGE = 86400 



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-396zs3^9^cyu*_@@rjb0$s7eh9zw5^$fztvj=15+!(($7fbe$#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'home.apps.HomeConfig',
    'django_countries',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'home.custom_middleware.FaviconMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'vitabi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'home.context_processors.media_url'
            ],
        },
    },
]

WSGI_APPLICATION = 'vitabi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
from django.core.exceptions import ImproperlyConfigured
# Get the DATABASE_URL environment variable
DATABASE_URL = os.environ.get('DATABASE_URL')

if not DATABASE_URL:
    raise ImproperlyConfigured("DATABASE_URL environment variable not set")

# Parse the database configuration from the DATABASE_URL
DATABASES = {
    'default': dj_database_url.config(default=DATABASE_URL)
}

# Ensure that the ENGINE is set in case dj_database_url fails to parse correctly
if not DATABASES['default'].get('ENGINE'):
    DATABASES['default']['ENGINE'] = 'django.db.backends.postgresql'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
from django.utils.translation import gettext_lazy as _

LANGUAGES = [
    ('en', _('English')),
    ('jp', _('Japanese')), #ja is default language
    ('vn', _('Vietnamese')), #vi is default language 
]

TIMEZONE_DISPLAY = {
    'Asia/Kabul': 'AFT',         # Afghanistan Time
    'Asia/Yerevan': 'AMT',       # Armenia Time
    'Asia/Baku': 'AZT',          # Azerbaijan Time
    'Asia/Dhaka': 'BST',         # Bangladesh Standard Time
    'Asia/Thimphu': 'BTT',       # Bhutan Time
    'Asia/Brunei': 'BNT',        # Brunei Darussalam Time
    'Asia/Phnom_Penh': 'ICT',    # Indochina Time
    'Asia/Beijing': 'CST',       # China Standard Time
    'Asia/Nicosia': 'EET',       # Eastern European Time
    'Asia/Tbilisi': 'GET',       # Georgia Standard Time
    'Asia/Hong_Kong': 'HKT',     # Hong Kong Time
    'Asia/Jakarta': 'WIB',       # Western Indonesia Time
    'Asia/Jayapura': 'WIT',      # Eastern Indonesia Time
    'Asia/Pontianak': 'WIB',     # Western Indonesia Time
    'Asia/Tehran': 'IRST',       # Iran Standard Time
    'Asia/Baghdad': 'AST',       # Arabian Standard Time
    'Asia/Tokyo': 'JST',         # Japan Standard Time
    'Asia/Amman': 'EET',         # Eastern European Time
    'Asia/Almaty': 'ALMT',       # Alma-Ata Time
    'Asia/Pyongyang': 'KST',     # Korea Standard Time
    'Asia/Seoul': 'KST',         # Korea Standard Time
    'Asia/Kuala_Lumpur': 'MYT',  # Malaysia Time
    'Asia/Kuching': 'MYT',       # Malaysia Time
    'Asia/Kathmandu': 'NPT',     # Nepal Time
    'Asia/Karachi': 'PKT',       # Pakistan Standard Time
    'Asia/Gaza': 'EET',          # Eastern European Time
    'Asia/Manila': 'PHT',        # Philippine Time
    'Asia/Qatar': 'AST',         # Arabian Standard Time
    'Asia/Riyadh': 'AST',        # Arabian Standard Time
    'Asia/Singapore': 'SGT',     # Singapore Time
    'Asia/Colombo': 'IST',       # India Standard Time
    'Asia/Damascus': 'EET',      # Eastern European Time
    'Asia/Dushanbe': 'TJT',      # Tajikistan Time
    'Asia/Bangkok': 'ICT',       # Indochina Time
    'Asia/Ashgabat': 'TMT',      # Turkmenistan Time
    'Asia/Dubai': 'GST',         # Gulf Standard Time
    'Asia/Samarkand': 'UZT',     # Uzbekistan Time
    'Asia/Ho_Chi_Minh': 'ICT',   # Indochina Time
    'Asia/Aden': 'AST',          # Arabian Standard Time
}


USE_L10N = True  # Enable localized formatting of data

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

LANGUAGE_CODE = 'jp'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Email settings for Gmail
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'vitabi.info@gmail.com'
EMAIL_HOST_PASSWORD = 'wxyaujzcxlgeyjrj'



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static')
]

django_heroku.settings(locals())

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
